% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_nfl.R
\name{simulate_nfl}
\alias{simulate_nfl}
\title{Simulate an NFL Season}
\usage{
simulate_nfl(
  nfl_season,
  estimate_games = NULL,
  simulate_games = NULL,
  ...,
  playoff_seeds = ifelse(nfl_season >= 2020, 7, 6),
  if_ended_today = FALSE,
  fresh_season = FALSE,
  fresh_playoffs = FALSE,
  tiebreaker_depth = 3,
  simulations = 10,
  sims_per_round = simulations,
  .debug = FALSE
)
}
\arguments{
\item{nfl_season}{Season to simulate}

\item{estimate_games}{A function to estimate the games to simulate. Uses the
schedule as argument.}

\item{simulate_games}{A function to simulate the results of the games to
simulate. Uses the schedule and the week as argument.}

\item{...}{Additional parameters passed on to the functions
\code{estimate_games} and \code{simulate_games}.}

\item{playoff_seeds}{Number of playoff teams per conference (increased
in 2020 from 6 to 7).}

\item{if_ended_today}{Either \code{TRUE} or \code{FALSE}. ...}

\item{fresh_season}{Either \code{TRUE} or \code{FALSE}. ...}

\item{fresh_playoffs}{Either \code{TRUE} or \code{FALSE}. ...}

\item{tiebreaker_depth}{A single value equal to 1, 2, or 3. The default is 3. The
value controls the depth of tiebreakers that shall be applied. The deepest
currently implemented tiebreaker is strength of schedule. The following
values are valid:
\describe{
\item{tiebreaker_depth = 1}{Break all ties with a coinflip. Fastest variant.}
\item{tiebreaker_depth = 2}{Apply head-to-head and division win percentage tiebreakers. Random if still tied.}
\item{tiebreaker_depth = 3}{Apply all tiebreakers through strength of schedule. Random if still tied.}
}}

\item{simulations}{Equals the number of times the given NFL season shall be simulated}

\item{sims_per_round}{The number of \code{simulations} can be split into
multiple rounds and be processed parallel. This parameter controls the number
of simulations per round.}

\item{.debug}{Either \code{TRUE} or \code{FALSE}. Controls whether additional
messages are printed to the console showing what the tiebreaking algorithms
are currently performing.}
}
\description{
This function simulates a given NFL season multiple times using custom functions
to estimate and simulate game results and computes the outcome of the given
season including playoffs and draft order.
It is possible to run the function in parallel processes by calling the
appropriate \link[future]{plan}.
Progress updates can be activated by calling \link[progressr]{handlers}
before the start of the simulations.
}
\examples{
\donttest{
library(nflseedR)

# Activate progress updates
progressr::handlers(global = TRUE)

# Parallel processing can be activated via the following line
# future::plan("multisession")

# Simulate the season 4 times in 2 rounds
sim <- nflseedR::simulate_nfl(
  2020,
  fresh_season = TRUE,
  simulations = 4,
  sims_per_round = 2
)
}
}
